@model MovieDB.Models.MovieDirectorViewModel

@{
    ViewBag.Title = "Add Movie - Director Association"; 
    Layout = "_Layout";
}

<h2>Add Movie - Director Association</h2>

<form asp-action="Add" method="post">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="mb-3">
        <label asp-for="Movie_ID" class="form-label"></label>
        <select asp-for="Movie_ID" class="form-control" asp-items="ViewBag.Movies as SelectList">
            <option value="">-- Select Movie --</option>
        </select>
        <span asp-validation-for="Movie_ID" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Director_ID" class="form-label">Director</label> @* Changed label text *@
        <select asp-for="Director_ID" class="form-control" asp-items="ViewBag.Directors as SelectList"> @* Changed ViewBag.Actors to ViewBag.Directors *@
            <option value="">-- Select Director --</option> @* Changed from Actor to Director *@
        </select>
        <span asp-validation-for="Director_ID" class="text-danger"></span>
    </div>
    
    @if (!ViewData.ModelState.IsValid && ViewData.ModelState[string.Empty] != null)
    {
        <div class="alert alert-danger">
            @foreach (var error in ViewData.ModelState[string.Empty].Errors)
            {
                <span>@error.ErrorMessage</span>
            }
        </div>
    }


    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Add Association</button>
        <a asp-action="List" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
