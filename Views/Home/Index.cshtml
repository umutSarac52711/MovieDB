@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Analyze insights from the Movie Database.</p>
</div>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <h2 class="text-center">Movies per Genre</h2>
            <div style="height: 300px;">
                <canvas id="genreChart"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <h2 class="text-center">Movie Revenue vs Budget</h2>
            <div style="height: 300px;">
                <canvas id="revenueBudgetChart"></canvas>
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-md-6 offset-md-3"> @* Center this chart *@
            <h2 class="text-center">Number of Awards Won by Candidate Type</h2>
            <div style="height: 300px;">
                <canvas id="awardsByTypeChart"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Option 1: Using System.Text.Json (preferred for .NET 5+)
    var genreLabels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.GenreLabels));
    var genreCounts = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.GenreCounts));
    var revenueBudgetData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.RevenueBudgetData));
    // var revenueBudgetFullData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.RevenueBudgetFullData));
    var awardTypeLabels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.AwardTypeLabels));
    var awardTypeCounts = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.AwardTypeCounts));

    // Debug data in console
    console.log('Genre Labels:', genreLabels);
    console.log('Genre Counts:', genreCounts);
    console.log('Revenue Budget Data:', revenueBudgetData);
    console.log('Award Type Labels:', awardTypeLabels);
    console.log('Award Type Counts:', awardTypeCounts);

    // 1. Genre Chart
    if (document.getElementById('genreChart')) {
        var ctx1 = document.getElementById('genreChart').getContext('2d');
        var genreChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: genreLabels,
                datasets: [{
                    label: 'Film Sayısı',
                    data: genreCounts,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(153, 102, 255, 0.7)',
                        'rgba(255, 159, 64, 0.7)',
                        'rgba(199, 199, 199, 0.7)',
                        'rgba(83, 102, 255, 0.7)',
                        'rgba(100, 255, 100, 0.7)',
                        'rgba(255, 100, 100, 0.7)'
                    ],
                    borderColor: [ 
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(199, 199, 199, 1)',
                        'rgba(83, 102, 255, 1)',
                        'rgba(100, 255, 100, 1)',
                        'rgba(255, 100, 100, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Film Sayısı'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Film Türü'
                        }
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `${context.parsed.y} film`;
                            }
                        }
                    }
                }
            }
        });
    }

    // 2. Revenue vs Budget Chart
    if (document.getElementById('revenueBudgetChart')) {
        var ctx2 = document.getElementById('revenueBudgetChart').getContext('2d');
        // Veri formatını doğru şekilde yapılandır
        var formattedBudgetData = [];
        for (var i = 0; i < revenueBudgetData.length; i++) {
            formattedBudgetData.push({
                x: revenueBudgetData[i].x,
                y: revenueBudgetData[i].y
            });
        }

        var revenueBudgetChart = new Chart(ctx2, {
            type: 'scatter',
            data: {
                datasets: [{
                    label: 'Movie Revenue vs Budget',
                    data: formattedBudgetData,
                    backgroundColor: 'rgba(54, 162, 235, 0.6)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    pointRadius: 5,
                    pointHoverRadius: 7
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: { title: { display: true, text: 'Budget (in Millions)' }, beginAtZero: true },
                    y: { title: { display: true, text: 'Revenue (in Millions)' }, beginAtZero: true }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `Budget: $${context.parsed.x}M, Revenue: $${context.parsed.y}M`;
                            }
                        }
                    }
                }
            }
        });
    }

    // 3. Awards by Candidate Type Chart
    if (document.getElementById('awardsByTypeChart')) {
        var ctx3 = document.getElementById('awardsByTypeChart').getContext('2d');
        var awardsChart = new Chart(ctx3, {
            type: 'pie', 
            data: {
                labels: awardTypeLabels,
                datasets: [{
                    label: 'Award Wins',
                    data: awardTypeCounts,
                    backgroundColor: ['#6f42c1', '#e83e8c', '#17a2b8', '#fd7e14', '#20c997'],
                    borderColor: ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'], 
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                        labels: {
                            font: {
                                size: 14
                            }
                        }
                    },
                    title: {
                        display: true,
                        text: 'Award Wins by Candidate Type',
                        font: {
                            size: 16
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw || 0;
                                return `${label}: ${value} ödül`;
                            }
                        }
                    }
                }
            }
        });
    }
</script>