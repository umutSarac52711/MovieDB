@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="container mt-5">
    <h2 class="text-center">Movie per Genre</h2>
    <canvas id="departmentChart" width="400" height="200"></canvas>

    <h2 class="text-center mt-5">Movie Revenue vs Budget</h2>
    <canvas id="listenHoursChart" width="400" height="200"></canvas>

    <h2 class="text-center mt-5">Number of Awards by Candidate Type</h2>
    <canvas id="employeeByDateChart" width="400" height="200"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Movie per Genre Chart
        var ctx1 = document.getElementById('departmentChart').getContext('2d');
        var genreChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: [], // To be loaded from server
                datasets: [{
                    label: 'Number of Movies',
                    data: [], // To be loaded from server
                    backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745', '#6f42c1', '#fd7e14', '#17a2b8', '#e83e8c'],
                    borderColor: ['#0056b3', '#a71d2a', '#cc9a06', '#1c7c34', '#4e2787', '#c75e09', '#0f6674', '#a32760'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: { y: { beginAtZero: true } }
            }
        });
        
        // Load real genre data
        fetch('/Home/GetMoviesPerGenreData')
            .then(response => response.json())
            .then(data => {
                genreChart.data.labels = data.labels;
                genreChart.data.datasets[0].data = data.data;
                genreChart.update();
            })
            .catch(error => console.error('Error fetching genre data:', error));

        // Movie Revenue vs Budget Chart
        var ctx2 = document.getElementById('listenHoursChart').getContext('2d');
        var revenueBudgetChart = new Chart(ctx2, {
            type: 'scatter',
            data: {
                datasets: [{
                    label: 'Movie Revenue vs Budget',
                    data: [], // To be loaded from server
                    backgroundColor: 'rgba(54, 162, 235, 0.6)',
                    borderColor: 'rgba(54, 162, 235, 1)'
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: { title: { display: true, text: 'Budget (in Millions)' }, beginAtZero: true },
                    y: { title: { display: true, text: 'Revenue (in Millions)' }, beginAtZero: true }
                }
            }
        });
        
        // Load real budget/revenue data
        fetch('/Home/GetMovieRevenueBudgetData')
            .then(response => response.json())
            .then(data => {
                revenueBudgetChart.data.datasets[0].data = data;
                revenueBudgetChart.update();
            })
            .catch(error => console.error('Error fetching budget/revenue data:', error));

        // Awards by Candidate Type Chart
        var ctx3 = document.getElementById('employeeByDateChart').getContext('2d');
        var awardsChart = new Chart(ctx3, {
            type: 'bar',
            data: {
                labels: [], // To be loaded from server
                datasets: [{
                    label: 'Award Count',
                    data: [], // To be loaded from server
                    backgroundColor: ['#6f42c1', '#e83e8c', '#17a2b8'],
                    borderColor: ['#4e2787', '#a32760', '#0f6674'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: { y: { beginAtZero: true } }
            }
        });
        
        // Load real awards data
        fetch('/Home/GetAwardsByTypeData')
            .then(response => response.json())
            .then(data => {
                awardsChart.data.labels = data.labels;
                awardsChart.data.datasets[0].data = data.data;
                awardsChart.update();
            })
            .catch(error => console.error('Error fetching awards data:', error));
    });
</script>
